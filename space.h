#ifndef SPACE_H_
#define SPACE_H_

#define MAXDEPTH 1

#define WHITE 0xF
#define BLACK 0x7

#define KING	0x0
#define QUEEN	0x1
#define ROOK	0x2
#define BISHOP	0x3
#define KNIGHT	0x4
#define PAWN	0x5
#define EMPTY	-51;

#define WHITE_KING   8
#define WHITE_QUEEN  9
#define WHITE_ROOK   10
#define WHITE_BISHOP 11
#define WHITE_KNIGHT 12
#define WHITE_PAWN   13

#define BLACK_KING   KING
#define BLACK_QUEEN  QUEEN
#define BLACK_ROOK   ROOK
#define BLACK_BISHOP BISHOP
#define BLACK_KNIGHT KNIGHT
#define BLACK_PAWN   PAWN

#define WHITE_TURN 1
#define BLACK_TURN 0

#define PIECE_TYPE 1
#define BOARD_POSITION 0
#define IS_OCCUPIED 1
#define NOT_OCCUPIED 0
#define NO_CAPTURE -1
#define NO_MOVE -1
#define NO_EN_PASSANT -16
#define EN_PASSANT 16

//PROMOTION CODES FOR PAWN PROMOTION
//WHITE PAWN PROMOTION




#define WHITE_PROMOTE_QUEEN_NO_CAPTURE		32
#define WHITE_PROMOTE_QUEEN_CAPTURE_PAWN	33
#define WHITE_PROMOTE_QUEEN_CAPTURE_ROOK	34
#define WHITE_PROMOTE_QUEEN_CAPTURE_KNIGHT	35
#define WHITE_PROMOTE_QUEEN_CAPTURE_BISHOP	36
#define WHITE_PROMOTE_QUEEN_CAPTURE_QUEEN	37

#define WHITE_PROMOTE_ROOK_NO_CAPTURE		38
#define WHITE_PROMOTE_ROOK_CAPTURE_PAWN		39
#define WHITE_PROMOTE_ROOK_CAPTURE_ROOK		40
#define WHITE_PROMOTE_ROOK_CAPTURE_KNIGHT	41
#define WHITE_PROMOTE_ROOK_CAPTURE_BISHOP	42
#define WHITE_PROMOTE_ROOK_CAPTURE_QUEEN	43

#define WHITE_PROMOTE_KNIGHT_NO_CAPTURE		44
#define WHITE_PROMOTE_KNIGHT_CAPTURE_PAWN	45
#define WHITE_PROMOTE_KNIGHT_CAPTURE_ROOK	46
#define WHITE_PROMOTE_KNIGHT_CAPTURE_KNIGHT	47
#define WHITE_PROMOTE_KNIGHT_CAPTURE_BISHOP	48
#define WHITE_PROMOTE_KNIGHT_CAPTURE_QUEEN	49

#define WHITE_PROMOTE_BISHOP_NO_CAPTURE		50
#define WHITE_PROMOTE_BISHOP_CAPTURE_PAWN	51
#define WHITE_PROMOTE_BISHOP_CAPTURE_ROOK	52
#define WHITE_PROMOTE_BISHOP_CAPTURE_KNIGHT	53
#define WHITE_PROMOTE_BISHOP_CAPTURE_BISHOP	54
#define WHITE_PROMOTE_BISHOP_CAPTURE_QUEEN	55

//BLACK PROMOTION

#define BLACK_PROMOTE_QUEEN_NO_CAPTURE		56	
#define BLACK_PROMOTE_QUEEN_CAPTURE_PAWN	57
#define BLACK_PROMOTE_QUEEN_CAPTURE_ROOK	58
#define BLACK_PROMOTE_QUEEN_CAPTURE_KNIGHT	59
#define BLACK_PROMOTE_QUEEN_CAPTURE_BISHOP	60
#define BLACK_PROMOTE_QUEEN_CAPTURE_QUEEN	61

#define BLACK_PROMOTE_ROOK_NO_CAPTURE		62
#define BLACK_PROMOTE_ROOK_CAPTURE_PAWN		63
#define BLACK_PROMOTE_ROOK_CAPTURE_ROOK		64
#define BLACK_PROMOTE_ROOK_CAPTURE_KNIGHT	65
#define BLACK_PROMOTE_ROOK_CAPTURE_BISHOP	66
#define BLACK_PROMOTE_ROOK_CAPTURE_QUEEN	67

#define BLACK_PROMOTE_KNIGHT_NO_CAPTURE		68
#define BLACK_PROMOTE_KNIGHT_CAPTURE_PAWN	69
#define BLACK_PROMOTE_KNIGHT_CAPTURE_ROOK	70
#define BLACK_PROMOTE_KNIGHT_CAPTURE_KNIGHT	71
#define BLACK_PROMOTE_KNIGHT_CAPTURE_BISHOP	72
#define BLACK_PROMOTE_KNIGHT_CAPTURE_QUEEN	73

#define BLACK_PROMOTE_BISHOP_NO_CAPTURE		74		
#define BLACK_PROMOTE_BISHOP_CAPTURE_PAWN	75
#define BLACK_PROMOTE_BISHOP_CAPTURE_ROOK	76
#define BLACK_PROMOTE_BISHOP_CAPTURE_KNIGHT	77
#define BLACK_PROMOTE_BISHOP_CAPTURE_BISHOP	78
#define BLACK_PROMOTE_BISHOP_CAPTURE_QUEEN	79

#define DEMOTE_WHITE_PIECE					80
#define DEMOTE_BLACK_PIECE					81
//END PROMOTION CODES FOR PAWN PROMOTION




//Castling Macros

#define CHECK_WHITE_CASTLE_KINGSIDE		8
#define CHECK_WHITE_CASTLE_QUEENSIDE	4
#define CHECK_BLACK_CASTLE_KINGSIDE		2
#define CHECK_BLACK_CASTLE_QUEENSIDE	1

#define WHITE_CASTLE_KINGSIDE			82
#define WHITE_CASTLE_QUEENSIDE			83
#define BLACK_CASTLE_KINGSIDE			84
#define BLACK_CASTLE_QUEENSIDE			85
//End Castling Macros
#define WHITE_PIECE 0x8 
#define BLACK_PIECE 0x7
#define GET_PIECE_TYPE 0xF
#define GET_PIECE_NO_COLOR 0x7


typedef struct {
	//type includes: color, and the type of piece: 1 = white 0 = black
	//{000}	== KING
	//{001} == Queen
	//{010} == ROOK
	//{011} == BISHOP
	//{100} == KNIGHT
	//{101} == PAWN
	//{111} == EMPTY (Might be unnecessary)
	char boardposition;		// Space number identifier on the board {6 BITS}
	char isOccupied;		// 1 if occupied, 0 if unoccupied		{1 BIT }
	char pieceType;			// type of piece occupying the space	{4 BITS}
							//TODO CHECK ENUM for string types:	
} space;


char getboardposition(space *board);	//returns boardposition
char getisOccupied(space *board);		//returns 1 if occupied, 0 if not
char getpieceType(space *board);

#endif //SPACE_H